@import "aos.css";

:root {
    --gradient-default: linear-gradient(90deg, #9572FC 0%, #43E7AD 50.52%, #E2D45C 100%);
    --gradient-1: linear-gradient(90deg, #FF8C7A 0%, #61B2FB 50%, #78F878 100%);
    --gradient-2: linear-gradient(90deg, #F669B6 0%, #00BFFF 50%, #E69A3F 100%);
    --gradient-3: linear-gradient(90deg, #E36F3F 0%, #A155EF 50%, #C2EAA2 100%);
    --gradient-4: linear-gradient(90deg, #d6c669 0%, #bb63a2 50%, #83cdd9 100%);
}

@font-face {
    font-family: Arial;
    src: url("/fonts/Arial.ttf");
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: sans-serif;
}

ul {
    list-style: none;
}

body {
    background-image: linear-gradient(to bottom, #206699, #131216);
    background-position: top center;
    background-size: cover;
    background-repeat: repeat-y;
    min-height: 100vh;
}

body * {
    font-family: 'Inter', sans-serif;
    line-height: 160%;
    font-size: 1rem;
}

a {
    text-decoration: none;
    color: inherit;
}

p {
    margin: 0 !important;
    padding: 0 !important;
}

/* Animação para o header */
header div {
    animation: fromTop 0.7s 0.2s backwards;
}

/* Estilo base para elementos que animarão de baixo para cima */
main section,
.animate-from-bottom {
    opacity: 0; /* Começa invisível, mas presente na página */
    animation: fromBottom 0.7s ease forwards; /* 'forwards' mantém o estado final */
}

/* Animação para elementos que devem desaparecer */
.animate-hide-to-bottom {
    /* Não precisa de 'opacity: 0' inicial, pois deve estar visível antes de animar */
    animation: hideToBottom 0.7s ease forwards;
}

/* Delays para criar o efeito escalonado (stagger) */
main section:nth-child(1) {
    animation-delay: 0s;
}

main section:nth-child(2) {
    animation-delay: .4s; /* Aumentei um pouco o delay para o efeito ficar mais claro */
}

main section:nth-child(3) {
    animation-delay: .8s;
}

/* Definições das animações (Keyframes) */
@keyframes fromTop {
    from {
        opacity: 0;
        transform: translateY(-30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fromBottom {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes hideToBottom {
    from {
        opacity: 1;
        transform: translateY(0);
    }
    to {
        opacity: 0;
        transform: translateY(30px);
    }
}

.custom-tooltip {
    --bs-tooltip-font-size: 16px;
    --bs-tooltip-bg: #000 !important;
    --bs-tooltip-color: #FFF !important;
    --bs-tooltip-opacity: 0.9;
    --bs-tooltip-margin: 2rem !important;
}

p.text-muted, span.text-muted {
    letter-spacing: 0px;
    color: #FFF8 !important;
    font-size: 1rem;
    font-family: 'Inter Tight', 'Inter', sans-serif;
    font-weight: 300;
}

.text-balance {
    text-wrap: balance;
}

.text-always-balance {
    text-wrap: balance;
}

.gradient-area {
    background-size: 400% 100% !important;
    background: var(--gradient-1);
    animation: gradientAnimation 10s linear infinite;
}

.cursor-pointer {
    cursor: pointer;
}

button[disabled] {
    cursor: not-allowed;
}

.text-color-success {
    color: #8EDDB6;
}

@keyframes gradientAnimation {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

@media screen and (max-width: 500px) {
    .text-balance {
        text-wrap: initial;
    }
}