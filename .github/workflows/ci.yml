# Nome do Workflow
name: CI - Testes e Build

# Gatilho: Este workflow irá rodar sempre que um Pull Request for aberto
# ou atualizado para o branch 'main'.
on:
  # Permite que você inicie este workflow manualmente pela interface do GitHub
  workflow_dispatch:

  pull_request:
    branches: [ main ]

# Tarefas a serem executadas
jobs:
  # Nome da tarefa
  build-and-test:
    # Máquina virtual
    runs-on: ubuntu-latest

    # ADIÇÃO: Condição para rodar o job apenas para o Dependabot
    # Se o PR for de qualquer outro usuário, este job será pulado.
    if: github.actor == 'dependabot[bot]' || github.actor == 'github-actions' || github.actor == 'gabriersdev'

    # Passos da tarefa
    steps:
      # 1. Checkout do código do Pull Request
      - name: Checkout do repositório
        uses: actions/checkout@v4

      # 2. Configuração do Node.js
      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
#          node-version: '20'
          node-version: '22.18.0'
          # Habilita o cache do npm para acelerar a instalação
          cache: 'npm'

      # 3. Instalar dependências
      # Usamos 'npm ci' em vez de 'npm install' em workflows de CI.
      # É mais rápido e seguro, pois instala exatamente as versões do package-lock.json.
      - name: Instalar dependências
        run: npm ci:test

      # 4. Rodar o build do projeto (opcional)
      # O '--if-present' faz com que o comando só rode se o script "build" existir no seu package.json.
      # Se não existir, ele simplesmente pula este passo sem dar erro.
      - name: Build do projeto
        run: npm run build --if-present

      # 5. Rodar os testes
      # Este é o passo mais importante. Ele executa o script "test" do seu package.json.
      - name: Rodar testes
        run: npm test